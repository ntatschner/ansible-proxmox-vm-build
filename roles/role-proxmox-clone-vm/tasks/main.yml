---
# Clone New VM from template in Proxmox
- name: Cloning virtual machine from "{{ VM_template }}" with name "{{ vm_name_nt }}"
  proxmox_kvm:
    api_user: "{{ vault_proxmox_user }}"
    api_password: "{{ vault_api_password }}"
    api_host: "TheIntersect"
    name: "{{ vm_name_nt }}"
    node: "TheIntersect"
    storage: "biglocal"
    ostype: "l26"
    balloon: "1024"
    onboot: Yes
    localtime: Yes
    agent: Yes
    description: "Created With Ansible on: {{ ansible_date_time }} by: {{ tower_user_name }}."
    pool: "Playground"
    clone: "{{ VM_template }}"
    timeout: 300
  tags: provision,test

- name: Waiting to apply cloud init changes in disk
  wait_for:
    timeout: 5
  tags: provision

- name: Start the VM
  proxmox_kvm:
    api_user: "{{ vault_proxmox_user }}"
    api_password: "{{ vault_api_password }}"
    api_host: "TheIntersect"
    name: "{{ vm_name_nt }}"
    node: "TheIntersect"
    state: started
    timeout: 300
  register: wait
  tags: provision

- name: Waiting to start VM completely
  wait_for:
    timeout: 120
  when: wait.changed == true
  tags: provision

- name: Getting the VM state to get the new VMs ID
  proxmox_kvm:
    api_user: "{{ vault_proxmox_user }}"
    api_password: "{{ vault_api_password }}"
    api_host: "TheIntersect"
    name: "{{ vm_name_nt }}"
    node: "TheIntersect"
    state: current
  register: _current_state

- name: Get New VM ID
  set_fact:
    _vmid: "{{ _current_state.msg | regex_search(regexp,'\\1') | first }}"
  vars:
    regexp: 'vmid = (\d*)'

- name: get IP
  shell: "/usr/sbin/qm guest cmd {{ _vmid }} network-get-interfaces"
  become: True
  register: _output_vm_ip

- set_fact:
    _ip_parse: "{{ _output_vm_ip.stdout | regex_findall(regexp,'\\1') | reject('search', '127.0.0.1') | list }}"
  vars:
    regexp: '"ip-address" : "(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})' 

- add_host:
    name: '{{ _ip_parse | first }}'
    groups: "playground"

- name: Setup host for ansible
  hosts: '{{ _ip_parse | first }}'
  become: true
  